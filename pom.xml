<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.piangles.backbone.services</groupId>
	<artifactId>userprofileservice</artifactId>
	<packaging>jar</packaging>
	<version>0.1</version>

	<name>User Profile Service</name>
	<properties>
		<org.springframework.build.aws-maven-version>5.0.0.RELEASE</org.springframework.build.aws-maven-version>

		<maven-compiler-plugin-version>3.8.1</maven-compiler-plugin-version>
		<maven-dependency-plugin>2.10</maven-dependency-plugin>
		<exec-maven-plugin-version>3.0.0</exec-maven-plugin-version>

		<java-source-version>17</java-source-version>
		<java-target-version>17</java-target-version>
		<docker-group-id>pianglesorg</docker-group-id>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.piangles.core</groupId>
			<artifactId>Core</artifactId>
			<version>5.6</version>
		</dependency>

		<dependency>
			<groupId>org.piangles.backbone.services</groupId>
			<artifactId>BackboneServicesLocator</artifactId>
			<version>5.8</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.3.9</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>org.springframework.build</groupId>
				<artifactId>aws-maven</artifactId>
				<version>${org.springframework.build.aws-maven-version}</version>
			</extension>
		</extensions>


		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin-version}</version>
				<configuration>
					<source>${java-source-version}</source>
					<target>${java-target-version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<mainClass>org.piangles.backbone.services.profile.UserProfileServiceContainer</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<finalName>UserProfileService</finalName>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<!-- disable standard deploy -->
					<execution>
						<id>default-deploy</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin-version}</version>
				<executions>
					<!-- Remove existing image from local repo -->
					<execution>
						<id>docker-clean</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>rmi</argument>
								<argument>${docker-group-id}/${project.artifactId}:${project.version}</argument>
							</arguments>
							<successCodes>
								<successCode>0</successCode>
								<successCode>1</successCode>
							</successCodes>
						</configuration>
					</execution>
					<!-- Create new docker image using Dockerfile which must be present 
						in current working directory. Tag the image using maven project version information. -->
					<execution>
						<id>docker-build</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>build</argument>
								<argument>-t</argument>
								<argument>${docker-group-id}/${project.artifactId}:${project.version}</argument>
								<argument>.</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Login to a docker repo. -->
					<execution>
						<id>docker-login</id>
						<phase>deploy</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>login</argument>
								<argument>-u</argument>
								<argument>${env.DOCKER_USER}</argument>
								<argument>-p</argument>
								<argument>${env.DOCKER_PASSWORD}</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Push the image to a docker repo. -->
					<execution>
						<id>docker-push</id>
						<phase>deploy</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>push</argument>
								<argument>${docker-group-id}/${project.artifactId}:${project.version}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
